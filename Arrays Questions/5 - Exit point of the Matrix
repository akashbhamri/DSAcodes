1. You are given a number n, representing the number of rows.
2. You are given a number m, representing the number of columns.
3. You are given n*m numbers (1's and 0's), representing elements of 2d array a.
4. Consider this array a maze and a player enters from top-left corner in east direction.
5. The player moves in the same direction as long as he meets '0'. On seeing a 1, he takes a 90 deg right turn.
6. You are required to print the indices in (row, col) format of the point from where you exit the matrix.

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] a = new int[n][m];
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                a[i][j] = sc.nextInt();

            }
        }
        int dir = 0;
        int i = 0;
        int j= 0;
        while(true)
        {
            dir = (dir + a[i][j])%4; //used to change the direction
            if(dir==0)
            {
                j++;   //east
            }
            else if(dir==1){
                i++; //south 
            }
            else if(dir==2)
            {
                j--; //west
            }
            else if(dir==3)
            {
                i--; //north
            }


        
        if(i<0)
        {
            i++;
            break;
        }
        if(j<0)
        {
            j++;
            break;
        }
        else if(i==a.length){
            i--;
            break;
        }
        else if (j==a[0].length)
        {
            j--;
            break;
        }
        }
      System.out.println(i);
      System.out.println(j);




    }

}
