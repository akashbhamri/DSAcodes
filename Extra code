Initial Findings:
We logged into the server and utilized the grep command to check for resource utilization. Upon investigation, we observed that multiple Node processes were running concurrently on the server. After consulting with the application team, it was clarified that this behavior occurs when they merge code into the develop branch. As part of the merge process, the system runs all active pull requests (PRs) in the repository to check for any dependency or conflict issues. This results in a large number of processes running on a single server simultaneously, leading to high resource utilization.


New Relic Investigation:
Further investigation was carried out using New Relic to assess the server's performance during this process. We observed that the resource utilization (CPU, memory) was significantly high during the execution of the processes triggered by the PR checks. Once the process completed, the utilization levels dropped back to normal.

Root Cause Analysis (RCA):
The root cause of the high resource utilization was identified as the simultaneous execution of multiple PRs on a single server, which led to the overutilization of system resources. This bottleneck occurred because all executors were being run on one machine, thereby consuming excessive CPU and memory capacity.

Suggested Solution:
We recommended reducing the number of executors from 8 to 4 to help distribute the workload more evenly across multiple virtual machines (VMs). This change would help balance the resource usage, preventing overutilization on a single server, and ensuring that the process is completed efficiently without affecting the performance of the host server.
