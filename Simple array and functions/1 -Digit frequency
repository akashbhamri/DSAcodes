Example
Sample Input

994543234
 4

Sample Output
3
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int d = scn.nextInt();
        
        int f = getDigitFrequency(n, d);
        System.out.println(f);
    }

    public static int getDigitFrequency(int n, int d) {
       int count= 0;
        while(n>0)
        {
            int digit = n%10;
            if (digit ==d)
            {
                count ++;
            } 
            n = n/10;
        }
        return count;
    }
}
Analysis
Come on friend, I know you can answer this. Give it a try!


Time Complexity:

O(log10 n) We are extracting digits of number n which will take O(log10 n) time as there can be maximum floor(log10) digits in a number n.


Space Complexity:

O(1) We just need to store the count of matched digits in an integer variable counter, 
hence O(1) auxiliary space is required. I hope you enjoyed solving the problem with me.
