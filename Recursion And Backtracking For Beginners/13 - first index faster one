Example
Sample Input

6
15
11
40
4
4
9
4

Sample Output
3
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for(int i=0; i<a.length; i++)
        {
            a[i] = sc.nextInt();
        }
        int search = sc.nextInt();
      System.out.println(firstIndex(a,0,search));
        }

    public static int firstIndex(int[] arr, int idx, int x){
        
        if(idx==arr.length)
        {
            return -1;
        }

        
        if(arr[idx]==x)
        {
            return idx;
        }
        else{
            int mist = firstIndex(arr,idx+1,x);
            
            return mist;
        }
        }

}
 Analysis
Time Complexity :

The time complexity of this solution is O(n) as we are traversing an array and searching for an element.


SPACE COMPLEXITY :

As you know from the previous questions, since we did not take any extra memory, the space complexity is O(1), but if we consider stack space then it is O(n).
