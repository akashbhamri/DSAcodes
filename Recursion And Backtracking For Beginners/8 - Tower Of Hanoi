Example
Sample Input

3
10
11
12

Sample Output
1[10 -> 11]
2[10 -> 12]
1[11 -> 12]
3[10 -> 11]
1[12 -> 10]
2[12 -> 11]
1[10 -> 11]

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = 3;
        int t1 = 11;
        int t2= sc.nextInt(;
        int t3 = sc.nextInt();
        toh(n,t1,t2,t3);
    }

    public static void toh(int n, int t1id, int t2id, int t3id){
        if(n==0)
        {
            return;
        }

        toh(n-1,t1id,t3id,t2id);
        System.out.println( n+"["+t1id+" -> " +t2id+"]");
        toh(n-1 , t3id,t2id,t1id);
    }

}
Analysis:
Time complexity: O(2^n).

Space complexity: O(1)

There is no data structure used, thus no auxiliary space is used. Hence, 
space complexity is O(1). Note: if we talk about the recursion space then it would be O(n).
