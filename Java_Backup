#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <java_versions> <backup_date> <password>"
    exit 1
fi

# Parameters
JAVA_VERSIONS="$1"
BACKUP_DATE="$2"
PASSWORD="$3"

# Set the output CSV file
OUTPUT_FILE="/path/to/output/cacerts_backup_${BACKUP_DATE}.csv"

# Function to perform the backup
perform_backup() {
    VERSION=$1
    BACKUP_DATE=$2
    OUTPUT_FILE=$3

    # Define possible paths for cacerts file
    PATH1="/appbin/install/jdk/${VERSION}/lib/security/cacerts"
    PATH2="/appbin/install/jdk/${VERSION}/jre/lib/security/cacerts"

    echo "Checking paths for Java version $VERSION..."

    # Check if cacerts file exists in the first path
    if [ -f "$PATH1" ]; then
        CACERTS_PATH="$PATH1"
        BACKUP_PATH="${PATH1}_backup_${BACKUP_DATE}.bak"
    elif [ -f "$PATH2" ]; then
        CACERTS_PATH="$PATH2"
        BACKUP_PATH="${PATH2}_backup_${BACKUP_DATE}.bak"
    else
        CACERTS_PATH=""
        BACKUP_PATH=""
    fi

    # If the cacerts file exists, back it up
    if [ -n "$CACERTS_PATH" ]; then
        echo "Backing up cacerts file for Java version $VERSION..."
        cp "$CACERTS_PATH" "$BACKUP_PATH"

        # Set permissions to 644
        chmod 644 "$BACKUP_PATH"

        # Log success in the CSV file
        echo "${VERSION},Success,${BACKUP_PATH}" >> "$OUTPUT_FILE"
    else
        # Log failure in the CSV file
        echo "${VERSION},Failed - Cacerts not found," >> "$OUTPUT_FILE"
    fi
}

# Write the CSV header
echo "Backup date: ${BACKUP_DATE}" > "$OUTPUT_FILE"
echo "Java versions to process: ${JAVA_VERSIONS}" >> "$OUTPUT_FILE"
echo "Version,Status,Backup Path" >> "$OUTPUT_FILE"

# Split the Java versions into an array
IFS=',' read -ra VERSIONS <<< "$JAVA_VERSIONS"

# Process each Java version one by one
for VERSION in "${VERSIONS[@]}"; do
    echo "Switching to rmpci user to back up cacerts for Java version $VERSION..."

    su - rmpci <<EOF
$PASSWORD
$(declare -f perform_backup)
perform_backup "$VERSION" "$BACKUP_DATE" "$OUTPUT_FILE"
EOF

    echo "Backup process completed for Java version $VERSION"
done

echo "All backups completed. Check $OUTPUT_FILE for details."
